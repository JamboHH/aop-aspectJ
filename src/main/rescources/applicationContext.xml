<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!--把对象交给spring容器，由spring容器同意创建，管理对象-->
    <!--声明目标类对象-->
    <bean id="someService" class="com.ah.ba05.SomeServiceImpl"></bean>
    <!--声明切面类对象-->
    <bean id="myAspect" class="com.ah.ba05.MyAspect"></bean>

    <!--声明自动代理生成器：使用aspectJ框架内部的功能，创建目标对象的代理对象
    创建代理对象是在内部容器中实现的，修改目标对象的内存中的结构，创建为代理对象
    所有你的目标对象就是被修改后的代理对象

    aspectj-autoproxy：会把spring容器中的所有的目标对象，一次性都声称为代理对象
    -->

    <!--proxy-target-class="true"：告诉框架，要使用cglib动态代理-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>